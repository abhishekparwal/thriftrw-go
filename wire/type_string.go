// Code generated by "stringer -type=Type"; DO NOT EDIT.

package wire

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TBool-2]
	_ = x[TI8-3]
	_ = x[TDouble-4]
	_ = x[TI16-6]
	_ = x[TI32-8]
	_ = x[TI64-10]
	_ = x[TBinary-11]
	_ = x[TStruct-12]
	_ = x[TMap-13]
	_ = x[TSet-14]
	_ = x[TList-15]
}

const (
	_Type_name_0 = "TBoolTI8TDouble"
	_Type_name_1 = "TI16"
	_Type_name_2 = "TI32"
	_Type_name_3 = "TI64TBinaryTStructTMapTSetTList"
)

var (
	_Type_index_0 = [...]uint8{0, 5, 8, 15}
	_Type_index_3 = [...]uint8{0, 4, 11, 18, 22, 26, 31}
)

func (i Type) String() string {
	switch {
	case 2 <= i && i <= 4:
		i -= 2
		return _Type_name_0[_Type_index_0[i]:_Type_index_0[i+1]]
	case i == 6:
		return _Type_name_1
	case i == 8:
		return _Type_name_2
	case 10 <= i && i <= 15:
		i -= 10
		return _Type_name_3[_Type_index_3[i]:_Type_index_3[i+1]]
	default:
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
